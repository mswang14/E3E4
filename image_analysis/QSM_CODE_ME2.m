%QSM code for Multiple Echos - 7/14/17

%1. generate mGRE using RussReconADMask_ME

%2. mask mGRE 
%2a - use autogenerated mask, get saved in their workdir
%2b - or feed in our masks from skull stripped RARE mapped to GRE
%2c - or from mapping atlas mask onto individual brains

% run QSM using QSM_star

addpath(genpath('/Users/omega/Documents/Natalie/SCCAN_tutorial/Russell_matlab/'));
addpath(genpath('/Users/omega/Documents/MATLAB/alex/'));
maskpath='/Users/omega/alex/skull_stripped_RARE/';
datapath='/Users/omega/alex/E3E4_GRE_work/';
antspath='/Volumes/workstation_home/ants_20160816_darwin_11.4/antsbin/bin/'
mypath0 = '/Users/omega/alex/'

% runnos ={'B05216', 'B05221'};
% 
% RARErunno='B05220'
% GRErunno='B05221'

RARErunno='B05270'
GRErunno='B05271'
runnos={'B05271'};

%first step registration
RARE = [mypath0 'E3E4_RARE/' RARErunno '.nii.gz'];
GRE = [mypath0 'E3E4_GRE_work/' GRErunno '.work/' GRErunno '_FE.nii.gz']; %this file doesn't actually exist?
mask = [mypath0 'E3E4_RAREmasks/' RARErunno '_mask.nii'];
mymask=[mypath0 'E3E4_RAREmasks/' RARErunno '_mask2.nii'];
outputTransformPrefix= [mypath0 'E3E4_RAREmasks/' GRErunno 'transf']
myAffine= [mypath0 'E3E4_RAREmasks/' GRErunno 'transf0GenericAffine.mat']
outputWarpedImage=[mypath0 'E3E4_RAREmasks/' RARErunno 'Warped2RARE.nii.gz']
outputInverseWarpedImage=[mypath0 'E3E4_RAREmasks/' GRErunno 'bInvWarped.nii.gz']
GREmask=[ mypath0 'E3E4_RAREmasks/' GRErunno 'GREmask.nii.gz']
GREmasked=[ mypath0 'E3E4_RAREmasks/' GRErunno 'GREmasked.nii.gz']
RAREmasked=[ mypath0 'E3E4_RAREmasks/' RARErunno 'RAREmasked.nii.gz']
outputm2f=[ mypath0 'E3E4_RAREmasks/' GRErunno 'RARE2GRE.nii.gz']

%second step registration
outputTransformPrefix2= [mypath0 'E3E4_RAREmasks/' GRErunno 'transf2']
myAffine2=[mypath0 'E3E4_RAREmasks/' GRErunno 'transf20GenericAffine.mat']
outputWarpedImage2=[mypath0 'E3E4_RAREmasks/' RARErunno 'Warped2RARE2.nii.gz']
outputInverseWarpedImage2=[mypath0 'E3E4_RAREmasks/' GRErunno 'bInvWarped2.nii.gz']
GREmask2=[mypath0 'E3E4_RAREmasks/' GRErunno 'GREmask2.nii.gz']
GREmasked2=[mypath0 'E3E4_RAREmasks/' GRErunno 'GREmasked2.nii.gz']
RAREmasked2=[mypath0 'E3E4_RAREmasks/' RARErunno 'RAREmasked2.nii.gz']
outputm2f2=[mypath0 'E3E4_RAREmasks/' GRErunno 'RARE2GRE2.nii.gz']



flag_mask=2;
%mask = open_nii('B05216_masked.nii');
%manmask.img = mask;

for i=1:numel(runnos)
    runno=runnos{i};

mypath=[datapath char(runno) '.work'];
cd(mypath)

myimg=RussReconADMask_ME('bruker','fermi','center','save');

myGREnii=make_nii(myimg,[0.1,0.1,0.1],[0, 0 ,0],16);
save_nii(myGREnii, [char(runno) 'mGRE.nii.gz']);

end


%%run QSM

FreqC=open_nii('FreqC.nii.gz');
load('B0dir.mat');
B0 = 7.0;
load TE
load meanSNR

Xidx = 1:6;
phimask1=open_nii('maskME.nii.gz');
T2 = T2mapMaskedWeighted(myimg(:,:,:,Xidx),TE(Xidx),phimask1,meanSNR(Xidx));

Freq = open_nii('Freq.nii.gz');
star = zeros(size(Freq));
voxelsize=[.1 .1 .1]; 

% mask = open_nii('/Users/omega/APOE_Study/RARE_Masks/B05221GREmask2.nii.gz');
mask = open_nii([mypath0 'E3E4_RAREmasks/' GRErunno '_mask2.nii']);

% mask = open_nii(maskpath, runno, 'strip_mask.nii'); %changed for vidconfmac
for cpt = 1:6 % only used thre first 6 of 8 echoes
star(:,:,:,cpt) = QSM_star(2*pi*Freq(:,:,:,cpt)*TE(1,cpt),single(mask), 'H',[1 0 0], 'voxelsize' ,voxelsize,'padsize',[12 12 12],'TE',TE(1,cpt)*1000,'B0',7);
end
star(star == 0) = NaN;
qsm = (nanmean(star(:,:,:,2:4),4));
[W,qsm2] = nanMEW(TE,.025,star);
save_nii(make_nii(qsm,voxelsize,[0 0 0]), [char(runno) '_QSM.nii.gz']);

%show3(XCFreqC);
%show3(T2); 
%

%make T2star maps


T22=T2; %abs(T2);
myT2nii=make_nii(T22,[0.1,0.1,0.1],[0, 0 ,0],16);
save_nii(myT2nii, [char(runno) 'T2.nii.gz']);
myimg2=abs(myimg(:,:,:,1));
myGRE = make_nii(myimg2,[0.1,0.1,0.1],[0, 0 ,0],16);
save_nii(myGRE, [char(runno) '_FE.nii.gz']);

%%



cmd0=[antspath '/CopyImageHeaderInformation  ' RARE ' ' mask ' ' mymask ' 1 1 1 '];
cmd1=[antspath 'antsRegistration -d 3  -o [ ' outputTransformPrefix ',' outputm2f ']' ' -m MI[' GRE ',' RARE ',1,32,Regular,1] -t Affine[0.1] -c [ 100x100x20,1e-6,20] ' ...
    ' -s 4x4x4vox -f 8x4x1 -r ['  GRE ',' RARE ',1 ] -u -v'  ];

cmd2=[antspath 'antsApplyTransforms -d 3 -e 0 -i ' mymask  ' -r ' GRE  ' -o ' GREmask ' -n NearestNeighbor -t ' myAffine ' --float'];
cmd2b=[antspath 'antsApplyTransforms -d 3 -e 0 -i ' RARE  ' -r ' GRE  ' -o ' outputm2f ' -n BSpline -t ' myAffine ' --float'];


cmd3=[antspath 'ImageMath 3 ' GREmasked ' m ' GREmask ' ' GRE ]
cmd4=[antspath 'ImageMath 3 ' RAREmasked ' m ' mymask ' ' RARE ]

[res,msg]=system(cmd0,'-echo')
[res,msg]=system(cmd1,'-echo')
[res,msg]=system(cmd2,'-echo')
[res,msg]=system(cmd2b,'-echo')
[res,msg]=system(cmd3,'-echo')
[res,msg]=system(cmd4,'-echo')

%second step registration for better masking



cmd12=[antspath 'antsRegistration -d 3  -o [ ' outputTransformPrefix2 ',' outputm2f2 ']' ' -m MI[' GREmasked ',' RAREmasked ',1,32,Regular,1] -t Affine[0.1] -c [ 100x100x20,1e-6,20] ' ...
    ' -s 4x4x4vox -f 8x4x1 -r ['  GREmasked ',' RAREmasked ',1 ] -u -v'  ];

cmd22=[antspath 'antsApplyTransforms -d 3 -e 0 -i ' mymask  ' -r ' GREmasked  ' -o ' GREmask2 ' -n NearestNeighbor -t ' myAffine2 ' --float'];
%cmd2b=['/Applications/ants_201410/' 'antsApplyTransforms -d 3 -e 0 -i ' RAREmasked  ' -r ' GREmasked  ' -o ' outputm2f2 ' -n BSpline -t ' myAffine2 ' --float'];


cmd32=[antspath 'ImageMath 3 ' GREmasked2 ' m ' GREmask2 ' ' GRE ]

[res,msg]=system(cmd12,'-echo')
[res,msg]=system(cmd22,'-echo')
[res,msg]=system(cmd32,'-echo')

close all